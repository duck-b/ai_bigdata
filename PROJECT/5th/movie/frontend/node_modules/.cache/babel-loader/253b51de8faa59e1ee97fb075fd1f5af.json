{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaehyeong/Documents/code/python-project/PROJECT/5th/movie/frontend/src/routes/pages/Recommend/RecommendPresenter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Link, useHistory, withRouter } from 'react-router-dom';\nimport { DropdownButton, Dropdown, Button, Card } from 'react-bootstrap'; // axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n// axios.defaults.xsrfCookieName = \"XCSRF-TOKEN\";\n// axios.defaults.withCredentials = true\n\nconst RecommendPresenter = props => {\n  _s();\n\n  let [genre, genreChange] = useState(['공연실황', '드라마', '다큐멘터리', '애니메이션', '모험', '액션', 'SF', '멜로/로맨스', '전쟁', '범죄', '판타지', '가족', '코미디', '서부', '한국', '뮤지컬', '공포', '미스터리', '스릴러', '서스펜스', '느와르', '서사']);\n  let history = useHistory();\n  const [movies, setMovies] = useState([{\n    \"movie_id\": 10001,\n    \"movie_title\": \"시네마 천국\",\n    \"movie_url\": \"https://movie.naver.com/movie/bi/mi/basic.naver?code=10001\",\n    \"movie_aud\": 9.63,\n    \"movie_net\": 9.33,\n    \"movie_rep\": 8.38,\n    \"movie_poster\": \"https://movie-phinf.pstatic.net/20210409_134/16179547654813MHq5_JPEG/movie_image.jpg?type=m203_290_2\",\n    \"movie_genre\": 2,\n    \"movie_country\": 10,\n    \"movie_runtime\": 124,\n    \"movie_release\": \"2020-04-22\",\n    \"movie_director\": \"쥬세페 토르나토레\",\n    \"movie_age\": 4,\n    \"movie_content\": \"어린 시절 영화가 세상의 전부였던 소년 토토는 학교 수업을 마치면 마을 광장에 있는 낡은 시네마 천국이라는 극장으로 달려가 영사 기사 알프레도와 친구로 지내며 어깨너머로 영사기술을 배운다. 어느 날 관객들을 위해 광장에서 야외 상영을 해주던 알프레도가 그만 화재 사고로 실명하게 되고 토토가 그의 뒤를 이어 시네마 천국의 영상기사로 일하게 된다. 실명한 후에도 토토의 친구이자 아버지로 든든한 정신적 지주가 되어준 알프레도는 청년이 된 토토가 사랑하는 여자 엘레나의 부모님의 반대로 좌절하자 넓은 세상으로 나가서 더 많은 것을 배우라며 권유하는데...\"\n  }]);\n  ;\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const loadRecommend = async () => {\n      setLoading(true);\n      const config = {\n        headers: {\n          \"content-type\": \"application/json\" // \"xsrfHeaderName\": 'X-CSRFToken'\n\n        }\n      };\n      await axios.get(`/api/recommend/${props.match.params.genre}/${props.match.params.movie1}/${props.match.params.movie2}/${props.match.params.movie3}/`, config).then(response => {\n        //전체 영화데이터\n        setMovies(response.data);\n        setTimeout(() => {\n          setLoading(false);\n        }, 2000);\n      });\n    };\n\n    loadRecommend();\n  }, []);\n\n  const changeCate = name => {\n    if (name === '공연실황') return 1;else if (name === '드라마') return 2;else if (name === '다큐멘터리') return 3;else if (name === '애니메이션') return 4;else if (name === '모험') return 5;else if (name === '액션') return 6;else if (name === 'SF') return 7;else if (name === '멜로/로맨스') return 8;else if (name === '전쟁') return 9;else if (name === '범죄') return 10;else if (name === '판타지') return 11;else if (name === '가족') return 12;else if (name === '코미디') return 13;else if (name === '서부') return 14;else if (name === '한국') return 15;else if (name === '뮤지컬') return 16;else if (name === '공포') return 17;else if (name === '미스터리') return 18;else if (name === '스릴러') return 19;else if (name === '서스펜스') return 20;else if (name === '느와르') return 21;else if (name === '서사') return 22;\n  };\n\n  const [genreValue, SetGenreValue] = useState();\n\n  const genreFilter = movies => {\n    const filterGenre = movies.filter(item => item.movie_genre == genreValue);\n    return filterGenre;\n  };\n\n  const handleClickReset = () => {\n    props.history.back();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD68C\\uC6D0\\uB2D8\\uC5D0\\uAC8C \\uCD94\\uCC9C\\uB41C \\uC601\\uD654\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD68C\\uC6D0\\uB2D8\\uC774 \\uC88B\\uC544\\uD558\\uC2E4 \\uB9CC\\uD55C \\uC601\\uD654\\uB97C \\uB354 \\uB9CE\\uC774 \\uCD94\\uCC9C\\uD574\\uB4DC\\uB9B4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \", /*#__PURE__*/_jsxDEV(Link, {\n            onClick: handleClickReset,\n            children: \"\\uB2E4\\uC2DC \\uC120\\uD0DD\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 103\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: '/search',\n            children: \" \\uC54C\\uC544\\uC11C \\uBCFC\\uAC8C\\uC694!! < Click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 108\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieposter\",\n        children: movies.map((movie, i) => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${movie.movie_id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-responsive2\",\n              src: movie.movie_poster,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecommendPresenter, \"+stPHJ+CqukxK5yIeIXN5lOw3Eo=\", false, function () {\n  return [useHistory];\n});\n\n_c = RecommendPresenter;\nexport default _c2 = withRouter(RecommendPresenter);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecommendPresenter\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jaehyeong/Documents/code/python-project/PROJECT/5th/movie/frontend/src/routes/pages/Recommend/RecommendPresenter.js"],"names":["React","useEffect","useState","useRef","axios","Cookies","Link","useHistory","withRouter","DropdownButton","Dropdown","Button","Card","RecommendPresenter","props","genre","genreChange","history","movies","setMovies","loading","setLoading","loadRecommend","config","headers","get","match","params","movie1","movie2","movie3","then","response","data","setTimeout","changeCate","name","genreValue","SetGenreValue","genreFilter","filterGenre","filter","item","movie_genre","handleClickReset","back","map","movie","i","movie_id","movie_poster"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport { Link, useHistory, withRouter } from 'react-router-dom';\nimport {DropdownButton, Dropdown, Button, Card} from 'react-bootstrap';\n\n\n// axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n// axios.defaults.xsrfCookieName = \"XCSRF-TOKEN\";\n// axios.defaults.withCredentials = true\n\nconst RecommendPresenter = (props) => {\n  let [genre, genreChange]=useState(['공연실황', '드라마', '다큐멘터리', '애니메이션', '모험', '액션', 'SF', '멜로/로맨스', '전쟁', '범죄', '판타지', '가족', '코미디', '서부', '한국', '뮤지컬', '공포', '미스터리', '스릴러' , '서스펜스', '느와르', '서사'])\n\n    let history = useHistory();\n    const [movies, setMovies] = useState([\n        {\n          \"movie_id\": 10001,\n          \"movie_title\": \"시네마 천국\",\n          \"movie_url\": \"https://movie.naver.com/movie/bi/mi/basic.naver?code=10001\",\n          \"movie_aud\": 9.63,\n          \"movie_net\": 9.33,\n          \"movie_rep\": 8.38,\n          \"movie_poster\": \"https://movie-phinf.pstatic.net/20210409_134/16179547654813MHq5_JPEG/movie_image.jpg?type=m203_290_2\",\n          \"movie_genre\": 2,\n          \"movie_country\": 10,\n          \"movie_runtime\": 124,\n          \"movie_release\": \"2020-04-22\",\n          \"movie_director\": \"쥬세페 토르나토레\",\n          \"movie_age\": 4,\n          \"movie_content\": \"어린 시절 영화가 세상의 전부였던 소년 토토는 학교 수업을 마치면 마을 광장에 있는 낡은 시네마 천국이라는 극장으로 달려가 영사 기사 알프레도와 친구로 지내며 어깨너머로 영사기술을 배운다. 어느 날 관객들을 위해 광장에서 야외 상영을 해주던 알프레도가 그만 화재 사고로 실명하게 되고 토토가 그의 뒤를 이어 시네마 천국의 영상기사로 일하게 된다. 실명한 후에도 토토의 친구이자 아버지로 든든한 정신적 지주가 되어준 알프레도는 청년이 된 토토가 사랑하는 여자 엘레나의 부모님의 반대로 좌절하자 넓은 세상으로 나가서 더 많은 것을 배우라며 권유하는데...\"\n        }\n      ]);\n    ;\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const loadRecommend = async() => {\n            setLoading(true)\n            const config = {\n                headers: {\n                    \"content-type\": \"application/json\",\n                    // \"xsrfHeaderName\": 'X-CSRFToken'\n                }\n            };\n            await axios.get(`/api/recommend/${props.match.params.genre}/${props.match.params.movie1}/${props.match.params.movie2}/${props.match.params.movie3}/`, config).then((response)=>{//전체 영화데이터\n                setMovies(response.data)\n                setTimeout(() => {\n                    setLoading(false)\n                }, 2000)\n            }); \n        }\n        loadRecommend();\n      }, []);\n    \n \n    const changeCate=( name )=>{\n        if( name === '공연실황') return 1\n        else if( name === '드라마') return 2\n        else if( name === '다큐멘터리') return 3\n        else if( name === '애니메이션') return 4\n        else if( name === '모험') return 5\n        else if( name === '액션') return 6\n        else if( name === 'SF') return 7\n        else if( name === '멜로/로맨스') return 8\n        else if( name === '전쟁') return 9\n        else if( name === '범죄') return 10\n        else if( name === '판타지') return 11\n        else if( name === '가족') return 12\n        else if( name === '코미디') return 13\n        else if( name === '서부') return 14\n        else if( name === '한국') return 15\n        else if( name === '뮤지컬') return 16\n        else if( name === '공포') return 17\n        else if( name === '미스터리') return 18\n        else if( name === '스릴러') return 19\n        else if( name === '서스펜스') return 20\n        else if( name === '느와르') return 21\n        else if( name === '서사') return 22\n    }\n    const [genreValue, SetGenreValue] = useState();\n    \n\n    const genreFilter = (movies) =>{\n        const filterGenre = movies.filter((item)=> item.movie_genre == genreValue)\n        return filterGenre\n    }\n\n    const handleClickReset = () => {\n        props.history.back()\n    }\n    return(\n        <div className='content'>\n            {loading?\n            <div>\n                Loading...\n            </div>\n            :\n            <>\n            <div className='recommendation'>\n                <h1>회원님에게 추천된 영화입니다.</h1>\n                <p>회원님이 좋아하실 만한 영화를 더 많이 추천해드릴 수 있습니다. <Link onClick={handleClickReset}>다시 선택하기</Link><br/><Link to={'/search'}> 알아서 볼게요!! &lt; Click</Link></p>\n            </div>\n            <div className='movieposter'>\n            {movies.map((movie,i)=>{\n                return(\n                    <Link to={`/${movie.movie_id}`}><img className='img-responsive2' src={movie.movie_poster} alt=\"\" /></Link>\n                )\n            })}\n            </div>\n            </>\n            }\n        </div>\n    )\n};\n\nexport default withRouter(RecommendPresenter);\n"]},"metadata":{},"sourceType":"module"}